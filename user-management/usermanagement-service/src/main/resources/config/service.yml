
# Singleton service factory configuration

singletons:
- javax.sql.DataSource:
  - com.zaxxer.hikari.HikariDataSource:
      DriverClassName: org.postgresql.Driver
      jdbcUrl: jdbc:postgresql://postgresdb:5432/postgres
      username: postgres
      password: postgres
      maximumPoolSize: 10
      useServerPrepStmts: true,
      cachePrepStmts: true,
      cacheCallableStmts: true,
      prepStmtCacheSize: 10,
      prepStmtCacheSqlLimit: 2048,
      connectionTimeout: 2000
- com.networknt.portal.usermanagement.model.common.model.user.UserRepository:
  - com.networknt.portal.usermanagement.model.jdbc.user.UserRepositoryImpl
- com.networknt.portal.usermanagement.model.common.crypto.PasswordSecurity:
  - com.networknt.portal.usermanagement.model.common.crypto.Pbkdf2PasswordSecurityImpl


# HandlerProvider implementation
- com.networknt.handler.HandlerProvider:
  - com.networknt.portal.usermanagement.PathHandlerProvider
# StartupHookProvider implementations, there are one to many and they are called in the same sequence defined.


# MiddlewareHandler implementations, the calling sequence is as defined in the request/response chain.
- com.networknt.handler.MiddlewareHandler:
  # Exception Global exception handler that needs to be called first to wrap all middleware handlers and business handlers
  - com.networknt.exception.ExceptionHandler
  # Metrics handler to calculate response time accurately, this needs to be the second handler in the chain.
  - com.networknt.metrics.MetricsHandler
  # Traceability Put traceabilityId into response header from request header if it exists
  - com.networknt.traceability.TraceabilityHandler
  # Correlation Create correlationId if it doesn't exist in the request header and put it into the request header
  - com.networknt.correlation.CorrelationHandler
  # Swagger Parsing swagger specification based on request uri and method.
  - com.networknt.swagger.SwaggerHandler
  # Security JWT token verification and scope verification (depending on SwaggerHandler)
  - com.networknt.security.JwtVerifyHandler
  # Body Parse body based on content type in the header.
  - com.networknt.body.BodyHandler
  # SimpleAudit Log important info about the request into audit log
  - com.networknt.audit.AuditHandler
  # Sanitizer Encode cross site scripting
  - com.networknt.sanitizer.SanitizerHandler
  # Validator Validate request based on swagger specification (depending on Swagger and Body)
  - com.networknt.validator.ValidatorHandler
